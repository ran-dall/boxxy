name: "Build and Publish Rust Binaries"
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        BUILD_TARGET: [release] # refers to a cargo profile

    outputs:
      release_built: ${{ steps.set-output.outputs.release_built }}

    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: "actions/checkout@v4"
      
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.BUILD_TARGET }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-
            ${{ runner.os }}-cargo-

      - name: Build binaries in "${{ matrix.BUILD_TARGET }}" mode
        run: cargo build --${{ matrix.BUILD_TARGET }}

      # OPTION 1: Using the most popular action - svenstaro/upload-release-action
      - name: Upload binaries to GitHub Releases
        if: github.event_name != 'pull_request'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.BUILD_TARGET }}/*
          file_glob: true
          tag: ${{ github.ref_name }}
          overwrite: true
          release_name: "Release ${{ github.ref_name }}"
          body: |
            ## Changes in this release
            - Built from commit ${{ github.sha }}
            - Build profile: ${{ matrix.BUILD_TARGET }}
            
            ## Download
            Download the appropriate binary for your platform below.


